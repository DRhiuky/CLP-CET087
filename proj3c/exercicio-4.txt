// Exemplo para a expressao '1 + 2 * 3':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 1;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 2;
code[ 3].f = LIT; code[ 3].l = 0; code[ 3].a = 3;
code[ 4].f = OPR; code[ 4].l = 0; code[ 4].a = 4; // MUL
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 2; // ADD
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN

// Exemplo para a expressao '4 - 5 / 1':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 4;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 5;
code[ 3].f = LIT; code[ 3].l = 0; code[ 3].a = 1;
code[ 4].f = OPR; code[ 4].l = 0; code[ 4].a = 5; // DIV
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 3; // SUB
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN

// Exemplo para a expressao '(6 + 7) * 8':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 6;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 7;
code[ 3].f = OPR; code[ 3].l = 0; code[ 3].a = 2; // ADD
code[ 4].f = LIT; code[ 4].l = 0; code[ 4].a = 8;
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 4; // MUL
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN

// Exemplo para a expressao '9 * (10 - 11)':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 9;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 10;
code[ 3].f = LIT; code[ 3].l = 0; code[ 3].a = 11;
code[ 4].f = OPR; code[ 4].l = 0; code[ 4].a = 3; // SUB
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 4; // MUL
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN


// Exemplo para a expressao '12 / (13 + 14)':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 12;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 13;
code[ 3].f = LIT; code[ 3].l = 0; code[ 3].a = 14;
code[ 4].f = OPR; code[ 4].l = 0; code[ 4].a = 2; // ADD
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 5; // DIV
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN


// Exemplo para a expressao '(15 - 16) / 17':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 15;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 16;
code[ 3].f = OPR; code[ 3].l = 0; code[ 3].a = 3; // SUB
code[ 4].f = LIT; code[ 4].l = 0; code[ 4].a = 17;
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 5; // DIV
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN


// Exemplo para a expressao '18 * 19 + 20':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 18;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 19;
code[ 3].f = OPR; code[ 3].l = 0; code[ 3].a = 4; // MUL
code[ 4].f = LIT; code[ 4].l = 0; code[ 4].a = 20;
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 2; // ADD
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN


// Exemplo para a expressao '21 - 22 * 23':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 21;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 22;
code[ 3].f = LIT; code[ 3].l = 0; code[ 3].a = 23;
code[ 4].f = OPR; code[ 4].l = 0; code[ 4].a = 4; // MUL
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 3; // SUB
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN


// Exemplo para a expressao '24 / 25 + 26':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 24;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 25;
code[ 3].f = OPR; code[ 3].l = 0; code[ 3].a = 5; // DIV
code[ 4].f = LIT; code[ 4].l = 0; code[ 4].a = 26;
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 2; // ADD
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN


// Exemplo para a expressao '(27 + 28) - 29':
code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 3;
code[ 1].f = LIT; code[ 1].l = 0; code[ 1].a = 27;
code[ 2].f = LIT; code[ 2].l = 0; code[ 2].a = 28;
code[ 3].f = OPR; code[ 3].l = 0; code[ 3].a = 2; // ADD
code[ 4].f = LIT; code[ 4].l = 0; code[ 4].a = 29;
code[ 5].f = OPR; code[ 5].l = 0; code[ 5].a = 3; // SUB
code[ 6].f = OPR; code[ 6].l = 0; code[ 6].a = 0; // RETURN